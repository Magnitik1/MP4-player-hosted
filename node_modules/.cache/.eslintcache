[{"C:\\Users\\Lenovo\\Documents\\GitHub\\MP4-player-hosted\\src\\index.js":"1","C:\\Users\\Lenovo\\Documents\\GitHub\\MP4-player-hosted\\src\\App.js":"2","C:\\Users\\Lenovo\\Documents\\GitHub\\MP4-player-hosted\\src\\Player\\Player.jsx":"3"},{"size":267,"mtime":1690228880380,"results":"4","hashOfConfig":"5"},{"size":214,"mtime":1690228880379,"results":"6","hashOfConfig":"5"},{"size":10932,"mtime":1689021128351,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1v0vnvt",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\Lenovo\\Documents\\GitHub\\MP4-player-hosted\\src\\index.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP4-player-hosted\\src\\App.js",[],[],"C:\\Users\\Lenovo\\Documents\\GitHub\\MP4-player-hosted\\src\\Player\\Player.jsx",["18","19","20","21","22"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./Player.css\";\r\nimport vid from \"./1.m4v\";\r\n\r\nvar globalIsPlaying = false;\r\nvar loudness = 1;\r\nfunction Player() {\r\n  const videoRef = useRef(null);\r\n  var [_, refresh] = useState();\r\n  var [progress, setProgress] = useState(0);\r\n  var [volumePic, setVolumePic] = useState(\"high\");\r\n  var [videoSpeed, setVideoSpeed] = useState(1);\r\n  var [open, isOpen] = useState();\r\n\r\n  const delay = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\n  useEffect(() => {\r\n    let keyupHandler = (event) => {\r\n      let vid = videoRef.current;\r\n      if (\r\n        event.key === \"f\" ||\r\n        event.key === \"а\" ||\r\n        event.key === \"F\" ||\r\n        event.key === \"А\"\r\n      ) {\r\n        fullscreen();\r\n      }\r\n      if (event.key === \" \" || event.key === \"з\" || event.key === \"З\") {\r\n        play_pause();\r\n      }\r\n      if (event.key === \"ArrowRight\") {\r\n        if (vid.duration - vid.currentTime <= 5) {\r\n          vid.currentTime = vid.duration;\r\n        } else vid.currentTime += 5;\r\n        console.log(vid.currentTime, \"up\");\r\n      }\r\n      if (event.key === \"ArrowLeft\") {\r\n        if (vid.currentTime <= 5) {\r\n          vid.currentTime = 0;\r\n        } else vid.currentTime -= 5;\r\n        console.log(vid.currentTime, \"down\");\r\n      }\r\n    };\r\n\r\n    let keydownHandler = (event) => {\r\n      let vid = videoRef.current;\r\n      if (event.key === \"ArrowUp\") {\r\n        if (vid.volume >= 0.95) {\r\n          changeVolume(1);\r\n          return;\r\n        } else {\r\n          changeVolume(vid.volume + 0.05);\r\n          return;\r\n        }\r\n      }\r\n      if (event.key === \"ArrowDown\") {\r\n        if (vid.volume <= 0.05) {\r\n          changeVolume(0);\r\n          return;\r\n        } else {\r\n          changeVolume(vid.volume - 0.05);\r\n          return;\r\n        }\r\n      }\r\n    };\r\n    let o = 0;\r\n    let show = async (e) => {\r\n      if (!globalIsPlaying || e.layerY > videoRef.current.clientHeight - 74) {\r\n        document.querySelector(\".controls\").style.display = \"block\";\r\n        return;\r\n      }\r\n      let t = 2200;\r\n      o++;\r\n      let r = o;\r\n      if (document.querySelector(\".controls\").style.display === \"none\") t = 50;\r\n      await delay(t);\r\n      if (r === o) document.querySelector(\".controls\").style.display = \"none\";\r\n      else document.querySelector(\".controls\").style.display = \"block\";\r\n    };\r\n    let scrolltime = (event) => {\r\n      console.log(\r\n        (event.layerX / document.getElementById(\"timeline\").clientWidth) * 100\r\n      );\r\n      setProgress(\r\n        (event.layerX / document.getElementById(\"timeline\").clientWidth) * 100\r\n      );\r\n      videoRef.current.currentTime =\r\n        videoRef.current.duration *\r\n        (event.layerX / document.getElementById(\"timeline\").clientWidth);\r\n    };\r\n    let clickHandler = (e) => {\r\n      play_pause();\r\n    };\r\n\r\n    let breakButtonFocusHandler = (ev) => {\r\n      ev.preventDefault();\r\n    };\r\n\r\n    function breakButtonFocus(button) {\r\n      document\r\n        .querySelector(button)\r\n        .addEventListener(\"mousedown\", breakButtonFocusHandler);\r\n    }\r\n\r\n    function cleanupBreakButtonFocus(button) {\r\n      document\r\n        .querySelector(button)\r\n        .removeEventListener(\"mousedown\", breakButtonFocusHandler);\r\n    }\r\n\r\n    breakButtonFocus(\".fullscreen\");\r\n    breakButtonFocus(\".volume\");\r\n    breakButtonFocus(\".speed\");\r\n    breakButtonFocus(\".play\");\r\n    breakButtonFocus(\".volume-slider\");\r\n    document\r\n      .getElementById(\"timeline\")\r\n      .addEventListener(\"mousedown\", scrolltime);\r\n    window.addEventListener(\"keyup\", keyupHandler);\r\n    window.addEventListener(\"keydown\", keydownHandler);\r\n    document.getElementById(\"myvideo\").addEventListener(\"click\", clickHandler);\r\n    document.getElementById(\"myvideo\").addEventListener(\"mousemove\", show);\r\n    return function cleanup() {\r\n      document.getElementById(\"myvideo\").removeEventListener(\"mousemove\", show);\r\n      window.removeEventListener(\"keyup\", keyupHandler);\r\n      window.removeEventListener(\"keydown\", keyupHandler);\r\n      document\r\n        .getElementById(\"myvideo\")\r\n        .removeEventListener(\"click\", clickHandler);\r\n      document\r\n        .getElementById(\"timeline\")\r\n        .removeEventListener(\"mousedown\", scrolltime);\r\n      cleanupBreakButtonFocus(\".fullscreen\");\r\n      cleanupBreakButtonFocus(\".volume\");\r\n      cleanupBreakButtonFocus(\".speed\");\r\n      cleanupBreakButtonFocus(\".play\");\r\n      cleanupBreakButtonFocus(\".volume-slider\");\r\n    };\r\n  }, []);\r\n\r\n  var handleUpdate = () => {\r\n    try {\r\n      if (videoRef.current.duration <= videoRef.current.currentTime) {\r\n        play_pause();\r\n      }\r\n      setProgress(\r\n        (videoRef.current.currentTime / videoRef.current.duration) * 100\r\n      );\r\n    } catch {}\r\n  };\r\n\r\n  var mute = () => {\r\n    if (volumePic === \"muted\") {\r\n      videoRef.current.volume = loudness;\r\n      document.getElementById(\"sound\").value = loudness;\r\n      changeVolume(loudness);\r\n    } else {\r\n      videoRef.current.volume = 0;\r\n      document.getElementById(\"sound\").value = 0;\r\n      changeVolume(0);\r\n    }\r\n  };\r\n\r\n  var changeVolume = (e) => {\r\n    videoRef.current.volume = e;\r\n    if (e >= 0.37) {\r\n      setVolumePic(\"high\");\r\n    } else if (e == 0) {\r\n      setVolumePic(\"muted\");\r\n    } else {\r\n      setVolumePic(\"low\");\r\n    }\r\n    if (e != 0) loudness = e;\r\n    document.getElementById(\"sound\").value = e;\r\n  };\r\n\r\n  var play_pause = () => {\r\n    if (globalIsPlaying) {\r\n      videoRef.current.pause();\r\n      globalIsPlaying = !globalIsPlaying;\r\n      refresh(2);\r\n      document.querySelector(\".controls\").style.display = \"block\";\r\n    } else if (!globalIsPlaying) {\r\n      videoRef.current.play();\r\n      globalIsPlaying = !globalIsPlaying;\r\n      refresh(1);\r\n      disapear();\r\n    }\r\n  };\r\n\r\n  const disapear = async (e) => {\r\n    await delay(2200);\r\n    if (globalIsPlaying || e.layerY > videoRef.current.clientHeight - 74) {\r\n      document.querySelector(\".controls\").style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  var fullscreen = () => {\r\n    var conteiner = document.querySelector(\".container\");\r\n    if (document.fullscreenElement === null) {\r\n      conteiner.requestFullscreen();\r\n    } else {\r\n      document.exitFullscreen();\r\n    }\r\n    console.log(!open);\r\n    open = !open;\r\n    isOpen(open);\r\n  };\r\n\r\n  var time = () => {\r\n    var s = \"\";\r\n    var minutes = 0,\r\n      seconds = 0,\r\n      minutes2 = 0,\r\n      seconds2 = 0;\r\n    try {\r\n      minutes = Math.floor(videoRef.current.currentTime / 60);\r\n      seconds = Math.floor(videoRef.current.currentTime) % 60;\r\n      minutes2 = Math.floor(videoRef.current.duration / 60);\r\n      seconds2 = Math.floor(videoRef.current.duration) % 60;\r\n    } catch {}\r\n    if (minutes < 10) minutes = \"0\" + minutes;\r\n    if (seconds < 10) seconds = \"0\" + seconds;\r\n    s += minutes;\r\n    s += \":\";\r\n    s += seconds;\r\n\r\n    if (minutes2 < 10) minutes2 = \"0\" + minutes2;\r\n    if (seconds2 < 10) seconds2 = \"0\" + seconds2;\r\n    s += \" / \";\r\n    s += minutes2;\r\n    s += \":\";\r\n    s += seconds2;\r\n    return s;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <video\r\n        id=\"myvideo\"\r\n        src={vid}\r\n        className=\"vid\"\r\n        ref={videoRef}\r\n        onTimeUpdate={handleUpdate}\r\n      />\r\n      <div className=\"controls\">\r\n        <div id=\"timeline\" className=\"timeline_container\">\r\n          <progress className=\"timeline\" value={progress} max=\"100\" />\r\n        </div>\r\n        <button className=\"play\" onClick={play_pause} tabIndex=\"-1\">\r\n          {globalIsPlaying ? (\r\n            <svg className=\"pause-icon\" viewBox=\"0 0 24 24\">\r\n              <path fill=\"currentColor\" d=\"M14,19H18V5H14M6,19H10V5H6V19Z\" />\r\n            </svg>\r\n          ) : (\r\n            <svg className=\"play-icon\" viewBox=\"0 0 24 24\">\r\n              <path fill=\"currentColor\" d=\"M8,5.14V19.14L19,12.14L8,5.14Z\" />\r\n            </svg>\r\n          )}\r\n        </button>\r\n        <span className=\"volume-conteiner\" tabIndex=\"-1\">\r\n          <button className=\"volume\" onClick={mute}>\r\n            {volumePic === \"high\" ? (\r\n              <svg className=\"volume-high-icon\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z\"\r\n                />\r\n              </svg>\r\n            ) : volumePic === \"low\" ? (\r\n              <svg className=\"volume-low-icon\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M5,9V15H9L14,20V4L9,9M18.5,12C18.5,10.23 17.5,8.71 16,7.97V16C17.5,15.29 18.5,13.76 18.5,12Z\"\r\n                />\r\n              </svg>\r\n            ) : (\r\n              <svg className=\"volume-muted-icon\" viewBox=\"0 0 24 24\">\r\n                <path\r\n                  fill=\"currentColor\"\r\n                  d=\"M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z\"\r\n                />\r\n              </svg>\r\n            )}\r\n          </button>\r\n          <input\r\n            id=\"sound\"\r\n            className=\"volume-slider\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"1\"\r\n            step=\"any\"\r\n            defaultValue={1}\r\n            onChange={(e) => {\r\n              changeVolume(e.target.value);\r\n            }}\r\n          />\r\n        </span>\r\n        <button\r\n          className=\"speed\"\r\n          tabIndex=\"-1\"\r\n          onClick={() => {\r\n            if (videoSpeed == 2) videoSpeed = 0;\r\n            videoRef.current.playbackRate = videoSpeed + 0.25;\r\n            setVideoSpeed(videoSpeed + 0.25);\r\n          }}>\r\n          {videoSpeed}X\r\n        </button>\r\n        <button className=\"time\" tabIndex=\"-1\">\r\n          {time()}\r\n        </button>\r\n        <button className=\"fullscreen\" onClick={fullscreen} tabIndex=\"-1\">\r\n          {open ? (\r\n            <svg className=\"close\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z\"\r\n              />\r\n            </svg>\r\n          ) : (\r\n            <svg className=\"open\" viewBox=\"0 0 24 24\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z\"\r\n              />\r\n            </svg>\r\n          )}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Player;\r\n",{"ruleId":"23","severity":1,"message":"24","line":9,"column":8,"nodeType":"25","messageId":"26","endLine":9,"endColumn":9},{"ruleId":"27","severity":1,"message":"28","line":139,"column":6,"nodeType":"29","endLine":139,"endColumn":8,"suggestions":"30"},{"ruleId":"31","severity":1,"message":"32","line":168,"column":18,"nodeType":"33","messageId":"34","endLine":168,"endColumn":20},{"ruleId":"31","severity":1,"message":"35","line":173,"column":11,"nodeType":"33","messageId":"34","endLine":173,"endColumn":13},{"ruleId":"31","severity":1,"message":"32","line":303,"column":28,"nodeType":"33","messageId":"34","endLine":303,"endColumn":30},"no-unused-vars","'_' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fullscreen' and 'play_pause'. Either include them or remove the dependency array.","ArrayExpression",["36"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",{"desc":"37","fix":"38"},"Update the dependencies array to be: [fullscreen, play_pause]",{"range":"39","text":"40"},[4523,4525],"[fullscreen, play_pause]"]